Identifier:
	IDENTIFIER 0

QualifiedIdentifier:
	Identifier { . Identifier } 0

QualifiedIdentifierList:
	QualifiedIdentifier { , QualifiedIdentifier } 0

CompilationUnit:
	[[Annotations] package QualifiedIdentifier ;] {ImportDeclaration} {TypeDeclaration} 0

ImportDeclaration:
	import [static] Identifier { . Identifier } [. *] ; 0

TypeDeclaration:
	ClassOrInterfaceDeclaration 0
	; 0

ClassOrInterfaceDeclaration:
	Modifier ClassDeclaration 33
	{Modifier} (ClassDeclaration | InterfaceDeclaration) 0

ClassDeclaration:
	NormalClassDeclaration 33
	EnumDeclaration 0

InterfaceDeclaration:
	NormalInterfaceDeclaration 0
	AnnotationTypeDeclaration 0

NormalClassDeclaration:
	class Identifier ClassBody 33
	class Identifier [TypeParameters] [extends Type] [implements TypeList] ClassBody 0

EnumDeclaration:
	enum Identifier [implements TypeList] EnumBody 0

NormalInterfaceDeclaration:
	interface Identifier [TypeParameters] [extends TypeList] InterfaceBody 0

AnnotationTypeDeclaration:
	@ interface Identifier AnnotationTypeBody 0

Type:
	ReferenceType [ ] 32
	BasicType [ ] 28
	ReferenceType { [ ] } 0
	BasicType { [ ] } 0

BasicType:
	int 69
	long 2
	byte 0
	short 0
	char 0
	float 0
	double 0
	boolean 0

ReferenceType:
	Identifier [TypeArguments] { . Identifier [TypeArguments] } 0

TypeArguments:
	< TypeArgument { , TypeArgument } > 0

TypeArgument:
	ReferenceType 0
	? [ (extends | super) ReferenceType ] 0

NonWildcardTypeArguments:
	< TypeList > 0

TypeList:
	ReferenceType { , ReferenceType } 0

TypeArgumentsOrDiamond:
	< > 0
	TypeArguments 0

NonWildcardTypeArgumentsOrDiamond:
	< > 0
	NonWildcardTypeArguments 0

TypeParameters:
	< TypeParameter { , TypeParameter } > 0

TypeParameter:
	Identifier [extends Bound] 0

Bound:
	ReferenceType { & ReferenceType } 0

Modifier:
	public 68
	static 35
	strictfp 0
	volatile 0
	transient 0
	synchronized 0
	native 0
	final 0
	abstract 0
	private 0
	protected 0
	Annotation 0

Annotations:
	Annotation {Annotation} 0

Annotation:
	@ QualifiedIdentifier [( [AnnotationElement] )] 0

AnnotationElement:
	ElementValuePairs 0
	ElementValue 0

ElementValuePairs:
	ElementValuePair { , ElementValuePair } 0

ElementValuePair:
	Identifier = ElementValue 0
	0

ElementValue:
	Annotation 0
	Expression1 0
	ElementValueArrayInitializer 0

ElementValueArrayInitializer:
	{ [ElementValues] [,] } 0

ElementValues:
	ElementValue { , ElementValue } 0

ClassBody:
	{ ClassBodyDeclaration } 31
	{ {ClassBodyDeclaration} } 0

ClassBodyDeclaration:
	[static] Block 0
	{Modifier} MemberDecl 0
	; 0

MemberDecl:
	void Identifier VoidMethodDeclaratorRest 34
	MethodOrFieldDecl 1
	InterfaceDeclaration 0
	ClassDeclaration 0
	GenericMethodOrConstructorDecl 0
	Identifier ConstructorDeclaratorRest 0

MethodOrFieldDecl:
	Type Identifier MethodDeclaratorRest 1
	Type Identifier FieldDeclaratorsRest ; 0

MethodOrFieldRest:
	MethodDeclaratorRest 1
	FieldDeclaratorsRest ; 0

FieldDeclaratorsRest:
	VariableDeclaratorRest { , VariableDeclarator } 0

MethodDeclaratorRest:
	FormalParameters Block 1
	FormalParameters { [ ] } [throws QualifiedIdentifierList] (Block | ;) 0
	FormalParameters [throws QualifiedIdentifierList] (Block | ;) 0

VoidMethodDeclaratorRest:
	FormalParameters Block 34
	FormalParameters [throws QualifiedIdentifierList] (Block | ;) 0

ConstructorDeclaratorRest:
	FormalParameters [throws QualifiedIdentifierList] Block 0

GenericMethodOrConstructorDecl:
	TypeParameters GenericMethodOrConstructorRest 0

GenericMethodOrConstructorRest:
	(Type | void) Identifier MethodDeclaratorRest 0
	Identifier ConstructorDeclaratorRest 0

InterfaceBody:
	{ {InterfaceBodyDeclaration} } 0

InterfaceBodyDeclaration:
	; 0
	{Modifier} InterfaceMemberDecl 0

InterfaceMemberDecl:
	InterfaceMethodOrFieldDecl 0
	void Identifier VoidInterfaceMethodDeclaratorRest 0
	InterfaceGenericMethodDecl 0
	ClassDeclaration 0
	InterfaceDeclaration 0

InterfaceMethodOrFieldDecl:
	Type Identifier InterfaceMethodOrFieldRest 0

InterfaceMethodOrFieldRest:
	ConstantDeclaratorsRest ; 0
	InterfaceMethodDeclaratorRest 0

ConstantDeclaratorsRest:
	ConstantDeclaratorRest { , ConstantDeclarator } 0

ConstantDeclaratorRest:
	{ [ ] } = VariableInitializer 0

ConstantDeclarator:
	Identifier ConstantDeclaratorRest 0

InterfaceMethodDeclaratorRest:
	FormalParameters { [ ] } [throws QualifiedIdentifierList] ; 0

VoidInterfaceMethodDeclaratorRest:
	FormalParameters [throws QualifiedIdentifierList] ; 0

InterfaceGenericMethodDecl:
	TypeParameters (Type | void) Identifier InterfaceMethodDeclaratorRest 0

FormalParameters:
	( FormalParameterDecls ) 35
	( [FormalParameterDecls] ) 0

FormalParameterDecls:
	Type FormalParameterDeclsRest 36
	{VariableModifier} Type FormalParameterDeclsRest 0

VariableModifier:
	final 0
	Annotation 0

FormalParameterDeclsRest:
	... VariableDeclaratorId 0
	VariableDeclaratorId [, FormalParameterDecls] 0

VariableDeclaratorId:
	Identifier { [ ] } 0

VariableDeclarators:
	VariableDeclarator { , VariableDeclarator } 0

VariableDeclarator:
	Identifier [VariableDeclaratorRest] 0

VariableDeclaratorRest:
	= VariableInitializer 41
	{ [ ] } [= VariableInitializer] 0

VariableInitializer:
	Expression 41
	ArrayInitializer 0

ArrayInitializer:
	{ArrayInitializerSub} 0

ArrayInitializerSub:
	{ [ VariableInitializer { , VariableInitializer } [,] ] } 0

Block:
	{ BlockStatements } 27

BlockStatements:
	{BlockStatement} 0

BlockStatement:
	Statement 42
	LocalVariableDeclarationStatement 41
	ClassOrInterfaceDeclaration 0

LocalVariableDeclarationStatement:
	Type VariableDeclarators ; 41
	{VariableModifier} Type VariableDeclarators ; 0

Statement:
	StatementExpression ; 41
	try ResourceSpecification Block [Catches] [Finally] 0
	try Block (Catches | [Catches] Finally) 0
	synchronized ParExpression Block 0
	throw Expression ; 0
	return [Expression] ; 0
	continue [Identifier] ; 0
	break [Identifier] ; 0
	for ( ForControl ) Statement 0
	do Statement WhileSubStatement ; 0
	while ParExpression Statement 0
	switch ParExpression { SwitchBlockStatementGroups } 0
	assert Expression [: Expression] ; 0
	if ParExpression Statement [ElseStatement] 0
	Identifier : Statement 0
	; 0
	Block 0

WhileSubStatement:
	while ParExpression 0

ElseStatement:
	else Statement 0

StatementExpression:
	Expression 41

Catches:
	CatchClause { CatchClause } 0

CatchClause:
	catch ( {VariableModifier} CatchType Identifier ) Block 0

CatchType:
	QualifiedIdentifier { | QualifiedIdentifier } 0

Finally:
	finally Block 0

ResourceSpecification:
	( Resources [;] ) 0

Resources:
	Resource { ; Resource } 0

Resource:
	{VariableModifier} ReferenceType VariableDeclaratorId = Expression 0

SwitchBlockStatementGroups:
	{ SwitchBlockStatementGroup } 0

SwitchBlockStatementGroup:
	SwitchLabels BlockStatements 0

SwitchLabels:
	SwitchLabel { SwitchLabel } 0

SwitchLabel:
	case Expression : 0
	case EnumConstantName : 0
	default : 0

EnumConstantName:
	Identifier 0

ForControl:
	ForVarControl 0
	ForInit ; [Expression] ; [ForUpdate] 0

ForControlExp:
	Expression 0

ForVarControl:
	{VariableModifier} Type VariableDeclaratorId ForVarControlRest 0

ForVarControlRest:
	ForVariableDeclaratorsRest ; [ForControlExp] ; [ForUpdate] 0
	: Expression 0

ForVariableDeclaratorsRest:
	[= VariableInitializer] { , VariableDeclarator } 0

ForInit:

ForUpdate:
	StatementExpression 0

Expression:
	Expression1 [AssignmentOperator Expression1] 0

AssignmentOperator:
	= 0
	+= 0
	-= 0
	*= 0
	/= 0
	&= 0
	|= 0
	^= 0
	%= 0
	<<= 0
	>>= 0
	>>>= 0

Expression1:
	Expression2 [Expression1Rest] 0

Expression1Rest:
	? Expression : Expression1 0

Expression2:
	Expression3 [Expression2Rest] 0

Expression2Rest:
	instanceof Type 0
	{ InfixOp Expression3 } 0

InfixOp:
	== 7
	+ 2
	* 1
	- 1
	/ 1
	% 0
	>>> 0
	>> 0
	<< 0
	>= 0
	<= 0
	> 0
	< 0
	!= 0
	& 0
	^ 0
	| 0
	&& 0
	|| 0

Expression3:
	PrefixOp Expression3 2
	Primary {Selector} {PostfixOp} 0
	( (Expression | Type) ) Expression3 0
	-- Expression3 0
	++ Expression3 0

PrefixOp:
	- 1
	+ 1
	! 0
	~ 0

PostfixOp:
	++ 1
	-- 0

Primary:
	Literal 94
	new Creator 16
	ParExpression 15
	void . class 0
	BasicType { [ ] } . class 0
	NonWildcardTypeArguments (ExplicitGenericInvocationSuffix | this Arguments) 0
	super SuperSuffix 0
	this [Arguments] 0
	Identifier { . Identifier } [IdentifierSuffix] 0

Literal:
	IntegerLiteral 0
	FloatingPointLiteral 0
	CharacterLiteral 0
	StringLiteral 0
	BooleanLiteral 0
	NullLiteral 0

ParExpression:
	( Expression ) 15

Arguments:
	0
	( [ArgumentsSub] ) 0

ArgumentsSub:
	Expression { , Expression } 0

SuperSuffix:
	Arguments 0
	. Identifier [Arguments] 0

ExplicitGenericInvocationSuffix:
	super SuperSuffix 0
	Identifier Arguments 0

Creator:
	Type [ Expression ] 27
	CreatedName (ClassCreatorRest | ArrayCreatorRest) 0
	CreatedName ArrayCreatorRest 0
	CreatedName ClassCreatorRest 0
	NonWildcardTypeArguments CreatedName ClassCreatorRest 0

CreatedName:
	Identifier [TypeArgumentsOrDiamond] { . Identifier [TypeArgumentsOrDiamond] } 0

ClassCreatorRest:
	Arguments [ClassBody] 0

ArrayCreatorRest:
	[ (] { [ ] } ArrayInitializer | Expression ] {[ Expression ]} { [ ] }) 0

IdentifierSuffix:
	Arguments 34
	IdentifierSuffixSub 1
	. super Arguments 0
	. new [NonWildcardTypeArguments] InnerCreator 0
	. (class | ExplicitGenericInvocation | this) 0

IdentifierSuffixSub:
	ParExpression 15
	{ [ ] } . class 0

ExplicitGenericInvocation:
	NonWildcardTypeArguments ExplicitGenericInvocationSuffix 0

InnerCreator:
	Identifier [NonWildcardTypeArgumentsOrDiamond] ClassCreatorRest 0

Selector:
	. Identifier [Arguments] 0
	. ExplicitGenericInvocation 0
	. this 0
	. super SuperSuffix 0
	. new [NonWildcardTypeArguments] InnerCreator 0
	[ Expression ] 0

EnumBody:
	{ [EnumConstants] [,] [EnumBodyDeclarations] } 0

EnumConstants:
	EnumConstant 0
	EnumConstants , EnumConstant 0

EnumConstant:
	[Annotations] Identifier [Arguments] [ClassBody] 0

EnumBodyDeclarations:
	; {ClassBodyDeclaration} 0

AnnotationTypeBody:
	{ [AnnotationTypeElementDeclarations] } 0

AnnotationTypeElementDeclarations:
	AnnotationTypeElementDeclaration 0
	AnnotationTypeElementDeclarations AnnotationTypeElementDeclaration 0

AnnotationTypeElementDeclaration:
	{Modifier} AnnotationTypeElementRest 0

AnnotationTypeElementRest:
	Type Identifier AnnotationMethodOrConstantRest ; 0
	ClassDeclaration 0
	InterfaceDeclaration 0
	EnumDeclaration 0
	AnnotationTypeDeclaration 0

AnnotationMethodOrConstantRest:
	AnnotationMethodRest 0
	ConstantDeclaratorsRest 0

AnnotationMethodRest:
	( ) [[ ]] [default ElementValue] 0

